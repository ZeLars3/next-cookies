import Head from 'next/head';
import { GetServerSideProps } from 'next/types';
import Button from '@mui/material/Button';
import CssBaseline from '@mui/material/CssBaseline';
import Box from '@mui/material/Box';
import Container from '@mui/material/Container';
import ButtonGroup from '@mui/material/ButtonGroup';
import Router from 'next/router';
import Typography from '@mui/material/Typography';

interface PropsData {
  token: string;
}

export default function Home({ token }: PropsData) {
  const handleCreateCookie = () => {
    fetch('/api/success', {
      method: 'post',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ token: 'test' }),
    });
  };

  const handleRemoveCookie = () => {
    fetch('/api/error', {
      method: 'post',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({}),
    });
  };

  const redirectPage = () => {
    token ? Router.push('/success') : Router.push('/error');
  };

  return (
    <>
      <Head>
        <title>Next-cookies</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CssBaseline />
      <Container maxWidth="sm">
        <Box
          sx={{ bgcolor: '#fff', height: '100vh', justifyContent: 'center' }}
        >
          <Typography align="center" variant="h3">
            Your cookie token: {token || ''}
          </Typography>
          <Box
            sx={{
              display: 'flex',
              justifyContent: 'center',
              marginTop: '20px',
            }}
          >
            <ButtonGroup aria-label="medium secondary button group">
              <Button onClick={handleCreateCookie}>Create</Button>
              <Button onClick={handleRemoveCookie}>Delete</Button>
              <Button onClick={redirectPage}>Route</Button>
            </ButtonGroup>
          </Box>
        </Box>
      </Container>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ req }) => {
  return {
    props: {
      token: req.cookies.token || '',
    },
  };
};
